[{"C:\\Users\\User\\Desktop\\01-starting-project-forms\\01-starting-project\\src\\index.js":"1","C:\\Users\\User\\Desktop\\01-starting-project-forms\\01-starting-project\\src\\App.js":"2","C:\\Users\\User\\Desktop\\01-starting-project-forms\\01-starting-project\\src\\components\\SimpleInput.js":"3","C:\\Users\\User\\Desktop\\01-starting-project-forms\\01-starting-project\\src\\components\\BasicForm.js":"4"},{"size":142,"mtime":1616595887000,"results":"5","hashOfConfig":"6"},{"size":247,"mtime":1668588914875,"results":"7","hashOfConfig":"6"},{"size":1115,"mtime":1668592805561,"results":"8","hashOfConfig":"6"},{"size":2162,"mtime":1668596903946,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"132ozfm",{"filePath":"13","messages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"18"},{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\User\\Desktop\\01-starting-project-forms\\01-starting-project\\src\\index.js",[],["21","22"],"C:\\Users\\User\\Desktop\\01-starting-project-forms\\01-starting-project\\src\\App.js",[],"C:\\Users\\User\\Desktop\\01-starting-project-forms\\01-starting-project\\src\\components\\SimpleInput.js",["23"],"import { useRef, useState } from \"react\";\n\nconst SimpleInput = (props) => {\n  const nameInputRef = useRef();\n  const [nameIsValid, setNameIsValid] = useState(true);\n\n  const formSubmitHandler = (event) => {\n    event.preventDefault();\n    const enteredName = nameInputRef.current.value;\n    setNameIsValid(true);\n\n    nameInputRef.current.value = \"\";\n  };\n\n  const onBlurHandler = () => {\n    const enteredName = nameInputRef.current.value;\n    setNameIsValid(true);\n\n    if (enteredName.trim() === \"\") {\n      setNameIsValid(false);\n      return;\n    }\n  };\n  const nameInputClasses = nameIsValid\n    ? \"form-control\"\n    : \"form-control invalid\";\n  return (\n    <form onSubmit={formSubmitHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          ref={nameInputRef}\n          onBlur={onBlurHandler}\n        />\n        {!nameIsValid && <p>Input not Defaunt</p>}\n      </div>\n      <div className=\"form-actions\">\n        <button>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n",["24","25"],"C:\\Users\\User\\Desktop\\01-starting-project-forms\\01-starting-project\\src\\components\\BasicForm.js",[],{"ruleId":"26","replacedBy":"27"},{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","severity":1,"message":"31","line":9,"column":11,"nodeType":"32","messageId":"33","endLine":9,"endColumn":22},{"ruleId":"26","replacedBy":"34"},{"ruleId":"28","replacedBy":"35"},"no-native-reassign",["36"],"no-negated-in-lhs",["37"],"no-unused-vars","'enteredName' is assigned a value but never used.","Identifier","unusedVar",["36"],["37"],"no-global-assign","no-unsafe-negation"]